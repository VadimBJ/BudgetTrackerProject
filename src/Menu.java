import java.awt.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.List;
import java.util.Map;


public class Menu implements Finals {

  public static void menuLogin(List<Transaction> transactionList,
                               List<Currency> currencyList, Map<String, String> userData) throws IOException, InterruptedException {
    boolean isLogin = false;
    do {
      System.out.print("""
            
            ùüô. –í–æ–π—Ç–∏ –ø–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å—å—é
            ùüö. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é:\u202F""");
      int choice = Input.readIntLimited(1, 2);
      switch (choice) {
        case 1 -> {
          isLogin = Input.userLoginRead(userData);
          if (isLogin) {
            Input.readFromEncryptFile(transactionList, currencyList);
          }
        }
        case 2 -> {
          isLogin = Input.userNewRead(userData);
          if (isLogin) {
            Input.initializeData(currencyList);
          }
        }
      }
    } while (!isLogin);
  }

  public static void menuMain(BufferedReader br, List<Transaction> transactionList,
                              List<Currency> currencyList) throws IOException, AWTException, InterruptedException {
    while (true) {
      Output.clearScreen();
      System.out.println(LOGO2);
      System.out.println();
      System.out.println(BLUE + "[ –û–°–ù–û–í–ù–û–ï –ú–ï–ù–Æ ]" + RESET);
      System.out.println("""
          –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
            ùüô. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            ùüö. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –æ–¥–Ω–∏–º —Å–ø–∏—Å–∫–æ–º
            ùüõ. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å–ø–∏—Å–∫–∞–º–∏ –ø–æ 10
            ùüú. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏
            ùüù. –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é
            ùüû. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            ùüü. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–ª—é—Ç—É
            ùü†. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
            
            ùüò. –í—ã—Ö–æ–¥
          """);
      System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é: ");
      int choice = Input.readIntLimited(0, 8);
      switch (choice) {
        case 1 -> Input.addTransaction(br, transactionList, currencyList);
        case 2 -> Output.printTransactionAll(br, transactionList, currencyList);
        case 3 -> Output.printTransactionBy10(transactionList, currencyList);
        //todo –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏
        //todo –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é

        case 6 -> Input.addCategory(br);

        //todo –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–ª—é—Ç—É

        case 8 -> Output.writeToEncryptFile(transactionList, currencyList);
        case 0 -> System.exit(0); //todo –º–µ–Ω—é –¥–ª—è –≤—ã—Ö–æ–¥–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
      }
    }
  }

  public static void menuAnderTransactionList(BufferedReader br, List<Transaction> transactionList,
                                              List<Currency> currencyList, boolean isList10) throws IOException, InterruptedException, AWTException {
    System.out.println("""
        –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
          ùüô. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å—å –ø–æ Id
          ùüö. –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ Id
          ùüõ. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
          ùüú. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞–Ω–∏—Ü""");
    System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é: ");
    int choice = Input.readIntLimited(1, 4);
    switch (choice) {
      case 1 -> {
        System.out.print(BLUE + "–í–≤–µ–¥–∏—Ç–µ Id –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏: " + RESET);
        Output.showTransactionById(br, transactionList, currencyList, Input.readIntLimited(1, transactionList.size()), isList10);
      }
      case 2 -> {
        System.out.print(BLUE + "–í–≤–µ–¥–∏—Ç–µ Id –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏: " + RESET);
        Input.deleteTransaction(transactionList, transactionList.size() - Input.readIntLimited(1, transactionList.size()));
      }
      case 3 -> Menu.menuMain(br, transactionList, currencyList);
      case 4 -> System.out.println(" ");

    }
  }

  public static void menuAfterTransactionListEnds(BufferedReader br, List<Transaction> transactionList,
                                                  List<Currency> currencyList, boolean isList10) throws IOException, InterruptedException, AWTException {
    System.out.println("""
        –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
          ùüô. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å—å –ø–æ Id
          ùüö. –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ Id
          ùüõ. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é""");
    System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é: ");
    int choice = Input.readIntLimited(1, 3);
    switch (choice) {
      case 1 -> {
        System.out.print(BLUE + "–í–≤–µ–¥–∏—Ç–µ Id –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏: " + RESET);
        Output.showTransactionById(br, transactionList, currencyList, Input.readIntLimited(1, transactionList.size()), isList10);
      }
      case 2 -> {
        System.out.print(BLUE + "–í–≤–µ–¥–∏—Ç–µ Id –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏: " + RESET);
        Input.deleteTransaction(transactionList, transactionList.size() - Input.readIntLimited(1, transactionList.size()));
      }
      case 3 -> Menu.menuMain(br, transactionList, currencyList);
    }
  }

  public static void menuAnderTransactionView(BufferedReader br, List<Transaction> transactionList,
                                              List<Currency> currencyList, int index, boolean isList10) throws IOException, InterruptedException, AWTException {
    System.out.println("""
        –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
          ùüô. –£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å
          ùüö. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å
          ùüõ. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é""");
    int choice;
    if (isList10) {
      System.out.println("  ùüú. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞–Ω–∏—Ü");
      System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é: ");
      choice = Input.readIntLimited(1, 4);
    } else {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é: ");
      choice = Input.readIntLimited(1, 3);
    }
    switch (choice) {
      case 1 -> Input.deleteTransaction(transactionList, index); //todo —É—á–∏—Ç—ã–≤–∞—Ç—å –≤ –æ–±—â–µ–π —Å—É–º–º–µ
      case 2 -> System.out.println(" ");//todo 2. —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å
      case 3 -> Menu.menuMain(br, transactionList, currencyList);
      case 4 -> System.out.print(" ");
    }
  }

}

